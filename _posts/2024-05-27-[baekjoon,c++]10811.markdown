---
layout: post
title:  "[백준/C++] 10811번 바구니 뒤집기"
date:   "2024-05-27 00:00:00 +0900"
#last_modified_at: "2024-05-03 00:00:00 +0900"
categories: ["백준"]
tags: ["cpp", "브론즈2"]
---

### 문제 설명
도현이는 바구니를 총 N개 가지고 있고, 각각의 바구니에는 1번부터 N번까지 번호가 순서대로 적혀져 있다. 바구니는 일렬로 놓여져 있고, 가장 왼쪽 바구니를 1번째 바구니, 그 다음 바구니를 2번째 바구니, ..., 가장 오른쪽 바구니를 N번째 바구니라고 부른다. 

도현이는 앞으로 M번 바구니의 순서를 역순으로 만들려고 한다. 도현이는 한 번 순서를 역순으로 바꿀 때, 순서를 역순으로 만들 범위를 정하고, 그 범위에 들어있는 바구니의 순서를 역순으로 만든다.

바구니의 순서를 어떻게 바꿀지 주어졌을 때, M번 바구니의 순서를 역순으로 만든 다음, 바구니에 적혀있는 번호를 가장 왼쪽 바구니부터 출력하는 프로그램을 작성하시오.

### 입력
첫째 줄에 N (1 ≤ N ≤ 100)과 M (1 ≤ M ≤ 100)이 주어진다.

둘째 줄부터 M개의 줄에는 바구니의 순서를 역순으로 만드는 방법이 주어진다. 방법은 i j로 나타내고, 왼쪽으로부터 i번째 바구니부터 j번째 바구니의 순서를 역순으로 만든다는 뜻이다. (1 ≤ i ≤ j ≤ N)

도현이는 입력으로 주어진 순서대로 바구니의 순서를 바꾼다.

### 출력
모든 순서를 바꾼 다음에, 가장 왼쪽에 있는 바구니부터 바구니에 적혀있는 순서를 공백으로 구분해 출력한다.

### 입출력 예

|입력|
|---|
| 5 4 |
| 1 2 |
| 3 4 |
| 1 4 | 
| 2 2 |

|출력|
|---|
| 3 4 1 2 5 |

---

### 내 코드
```c++
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int main(){
    int N, M, i, j;
    cin >> N >> M;
    vector<int> vec(N);
    
    for(int a=0; a<N; a++){
        vec[a]=a+1;
    }
    for(int a=0; a<M; a++){
        cin >> i >> j;
        int count=0;
        for(int b=0; b<=(j-i)/2; b++){
            swap(vec[i+count-1], vec[j-count-1]);
            count++;
        }
    }
    for(int v : vec){
    cout << v << " ";
    }

    return 0;
}
```
---
### Review
문제를 푸는데 생각보다 오래걸렸다.
바구니의 순서를 바꾸는 부분을 어떻게 구현할지에 대한 고민을 많이 했던것 같다.
다른 사람들의 풀이를 보니 count값 대신 b를 사용했으면 되었을 것 같다.
count 변수를 굳이 만들어줄 필요가 없었던 것 같다.

---
출처: 백준, https://www.acmicpc.net/problem/10811